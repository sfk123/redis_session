<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置緩存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 指定 ehcache 的配置文件 -->
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean>

	<!-- 配置进行授权和认证的 Realm -->
	<bean id="myRealm" class="com.sheng.example.MyRealm" init-method="setCredentialMatcher"></bean>
	<!-- 配置 Shiro 的 SecurityManager Bean. -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<property name="realm" ref="myRealm" />
	</bean>

	<!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 配置 ShiroFilter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 
		name 一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 登陆成功后的一面 -->
		<property name="successUrl" value="/shiro-success.jsp" />
		<property name="unauthorizedUrl" value="/shiro-unauthorized.jsp" />
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
		<property name="filterChainDefinitions">
			<value>
				<!--静态资源-->
				/css/**  = anon
				/images/**  = anon
				/assets/**=anon
				/js/**=anon
				<!-- 配置登出: 使用 logout 过滤器 -->
				/=anon
				/index.jsp=anon
				/login=anon
				/user.jsp = roles[user]
				/admin.jsp = roles[admin]
				/** = authc
			</value>
		</property>

		<property name="filters">
			<map>
				<entry key="authc">
					<bean class="com.sheng.example.AuthcLevelFilter"></bean>
				</entry>
				<!-- <entry key="roles"> <bean class="com.atguigu.shiro.realm.RolesAnyAuthorizationFilter"></bean> 
					</entry> -->
			</map>
		</property>

	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="60000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" /><!-- 定时检查失效的session -->
		<!-- <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
		<property name="sessionDAO" ref="sessionDAO" />
		<!--<property name="sessionIdCookie.name" value="jsid"/>  -->
		<!--<property name="sessionIdCookieEnabled" value="true" />-->
		<!--<property name="sessionIdCookie" ref="sessionIdCookie" />-->
	</bean>
	<!-- 会话验证调度器 -->
	<!--<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler"> 
		<property name="sessionValidationInterval" value="1800000"/> <property name="sessionManager" 
		ref="sessionManager"/> </bean> -->
	<!-- 会话DAO -->
	<bean id="sessionDAO" class="com.sheng.example.RedisSessionDao"></bean>
	<!--<bean id="sessionDAO"-->
		<!--class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
		<!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />-->
		<!--<property name="sessionIdGenerator" ref="sessionIdGenerator" />-->
	<!--</bean>-->
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="86400" />
		<property name="name" value="daskldj"></property>
		<property name="domain" value="sadf"></property>
	</bean>

</beans>
